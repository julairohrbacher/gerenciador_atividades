//Iniciando o banco de dados

var localDB = null;

function onInit(){
    try {
        if (!window.openDatabase) {
            updateStatus("ERROR! Navegador não permite banco de dados.");
        }
        else {
            initDB();
            createTables();
            queryAndUpdateOverview();
        }
    } 
    catch (e) {
        if (e == 2) {
            updateStatus("ERROR! Versão de banco de dados inválida.");
        }
        else {
            updateStatus("ERROR! Erro desconhecido: " + e + ".");
        }
        return;
    }
}

function initDB(){
    var shortName = 'management-book';
    var version = '1.0';
    var displayName = 'ContactsBookDB';
    var maxSize = 65536; //bytes
    localDB = window.openDatabase(shortName, version, displayName, maxSize);
}

//Cria tabela contatos
function createTables(){
	var query = 'CREATE TABLE IF NOT EXISTS management(id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, nome VARCHAR NOT NULL, telefone INTEGER NOT NULL, descricao VARCHAR NOT NULL, endereco VARCHAR NOT NULL, mode2 VARCHAR NOT NULL, mode6 VARCHAR NOT NULL);';
    try {
        localDB.transaction(function(transaction){
            transaction.executeSql(query, [], nullDataHandler, errorHandler);
            updateStatus("Tabela 'management' criada!");
        });
    } 
    catch (e) {
        updateStatus("ERROR! Base de dados não criada " + e + ".");
        return;
    }
}

function onSave(){
	var id = document.itemForm.id.value;
	if(id==''){
		onCreate();
	}else{
		onUpdate();
	}
	
}

function onCreate(){
    var nome = document.itemForm.nome.value;
    var telefone = document.itemForm.telefone.value;
    var descricao = document.itemForm.descricao.value;
    var endereco = document.itemForm.endereco.value;
    var mode2 = document.itemForm.mode2.value;
    var mode6 = document.itemForm.mode6.value;

    if (nome == "" || telefone == "" || descricao == "" || endereco == "" || mode2 == "" || mode6 == "") {
        updateStatus("ALERTA! Todos são campos obrigatórios!");
    }
    else {
        var query = "insert into management (nome, telefone, descricao, endereco, mode2, mode6) VALUES (?, ?, ?, ?, ?, ?);";
        try {
            localDB.transaction(function(transaction){
                transaction.executeSql(query, [nome, telefone, descricao, endereco, mode2, mode6], function(transaction, results){
                    if (!results.rowsAffected) {
                        updateStatus("ERROR! ");
                    }
                    else {
                        updateForm("", "", "", "", "", "", "");
                        updateStatus("Inserção realizada na linha: " + results.insertId);
                        queryAndUpdateOverview();
                        $.mobile.changePage("#listar", { transition: "slideup",reverse :"true"} );
                    }
                }, errorHandler);
            });
        } 
        catch (e) {
            updateStatus("ERROR! INSERT não realizado " + e + ".");
        }
    }
}

function onUpdate(){
    var id = document.itemForm.id.value;
    var nome = document.itemForm.nome.value;
    var telefone = document.itemForm.telefone.value;
    var descricao = document.itemForm.descricao.value;
    var endereco = document.itemForm.endereco.value;
    var mode2 = document.itemForm.mode2.value;
    var mode6 = document.itemForm.mode6.value;
    if (nome == "" || telefone == "" || descricao == "" || endereco == "" || mode2 == "" || mode6 == "") {
        updateStatus("Todos são campos obrigatórios!");
    }
    else {
        var query = "update management set nome=?, telefone=?, descricao=?, endereco=?, mode2=?, mode6=? where id=?;";
        try {
            localDB.transaction(function(transaction){
                transaction.executeSql(query, [nome, telefone, descricao, endereco, mode2, mode6, id], function(transaction, results){
                    if (!results.rowsAffected) {
                        updateStatus("ERROR! Update não realizado.");
                    }
                    else {
                        updateForm("", "", "", "", "", "", "");
                        updateStatus("Update realizado:" + results.rowsAffected);
                        queryAndUpdateOverview();
                        $.mobile.changePage("#listar", { transition: "slideup",reverse :"true"} );
                    }
                }, errorHandler);
            });
        } 
        catch (e) {
            updateStatus("ERROR! UPDATE não realizado " + e + ".");
        }
    }
}

function onDelete(){
    var id = document.itemForm.id.value;
    var query = "delete from management where id=?;";
    try {
        localDB.transaction(function(transaction){
        
            transaction.executeSql(query, [id], function(transaction, results){
                if (!results.rowsAffected) {
                    updateStatus("ERROR! Não foi possível excluir!");
                }
                else {
                    updateForm("", "", "", "", "", "", "");
                    updateStatus("Linhas deletadas:" + results.rowsAffected);
                    queryAndUpdateOverview();
					$.mobile.changePage("#listar", { transition: "slideup",reverse :"true"} );
                }
            }, errorHandler);
        });
    } 
    catch (e) {
        updateStatus("ERROR! Não foi possível excluir " + e + ".");
    }
    
}

function onSelect(htmlLIElement){
	var id = htmlLIElement.getAttribute("id");
	
	query = "SELECT * FROM management where id=?;";
    try {
        localDB.transaction(function(transaction){
        
            transaction.executeSql(query, [id], function(transaction, results){
            
                var row = results.rows.item(0);
                
                updateForm(row['id'], row['nome'], row['telefone'], row['descricao'], row['endereco'], row['mode2'], row['mode6']);
				$.mobile.changePage("#contato", { transition: "slideup"} );
                
            }, function(transaction, error){
                updateStatus("ERROR! " + error.code + "<br>Mensagem: " + error.message);
            });
        });
    } 
    catch (e) {
        updateStatus("ERROR! SELECT não realizado " + e + ".");
    }
   
}

function queryAndUpdateOverview(){

	//Remove as linhas existentes para inserção das novas
    var dataRows = document.getElementById("itemData").getElementsByClassName("data");
	
    while (dataRows.length > 0) {
        row = dataRows[0];
        document.getElementById("itemData").removeChild(row);
    };
    
	//Realiza a leitura no banco e cria novas linhas na tabela.
    var query = "SELECT * FROM management ORDER BY mode2 ASC;";
    try {
        localDB.transaction(function(transaction){
        
            transaction.executeSql(query, [], function(transaction, results){
                for (var i = 0; i < results.rows.length; i++) {
                
                    var row = results.rows.item(i);
					var a = document.createElement("a");
					a.setAttribute('href','#')
                    var li = document.createElement("li");
					li.setAttribute("id", row['id']);
                    li.setAttribute("class", "data");
                    li.setAttribute("onclick", "onSelect(this)");
                    
                    var liText = document.createTextNode(row['nome']);
					a.appendChild(liText);
                    li.appendChild(a);
                    
                    document.getElementById("itemData").appendChild(li);
					$('#itemData').listview('refresh');
                }
            }, function(transaction, error){
                updateStatus("ERROR! " + error.code + "<br>Mensagem: " + error.message);
            });
        });
    } 
    catch (e) {
        updateStatus("ERROR! SELECT não realizado " + e + ".");
    }
}

errorHandler = function(transaction, error){
    updateStatus("ERROR! " + error.message);
    return true;
}

nullDataHandler = function(transaction, results){
}

// Funções de update

function updateForm(id, nome, telefone, descricao, endereco, mode2, mode6){
    document.itemForm.id.value = id;
    document.itemForm.nome.value = nome;
    document.itemForm.telefone.value = telefone;
    document.itemForm.descricao.value = descricao;
    document.itemForm.endereco.value = endereco;
    document.itemForm.mode2.value = mode2;
    document.itemForm.mode6.value = mode6;
}

function updateStatus(status){
    $('.status').html(status);
}
